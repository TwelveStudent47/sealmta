<%- include("partials/header-logged.ejs") %>

<div class="category-filter">
  <select onchange="filterByCategory(this.value)">
    <option value="">√ñsszes kateg√≥ria</option>
    <% categories.forEach(category => { %>
      <option value="<%= category.id %>" <%= selectedCategory == category.id ? 'selected' : '' %>>
        <%= category.name %>
      </option>
    <% }); %>
  </select>
</div>

<!-- T√©ma l√©trehoz√°s gomb - csak jogosult felhaszn√°l√≥knak -->
<% if (canCreateMainThreads) { %>
  <button class="create-thread-btn" onclick="openCreateModal()">
    √öj f≈ët√©ma l√©trehoz√°sa
  </button>
<% } %>

<!-- T√©m√°k list√°ja -->
<div class="thread-list mb-3">
  <% if (threads && threads.length > 0) { %>
    <% threads.forEach(thread => { %>
      <div class="thread-item">
        <div class="thread-info">
          <a href="/thread/<%= thread.id %>" class="thread-title">
            <%= thread.title %>
          </a>
          <div class="thread-meta">
            <span>Szerz≈ë: <%= thread.author %></span>
            <span>| <%= new Date(thread.created_at).toLocaleDateString('hu-HU') %></span>
            <% if (thread.category_name) { %>
              <span class="thread-category"><%= thread.category_name %></span>
            <% } %>
          </div>
          <% if (thread.description_html) { %>
            <div class="thread-description markdown-content">
              <%- thread.description_html %>
            </div>
          <% } %>
        </div>
        
        <!-- T√∂rl√©s gomb - admin vagy jogosult felhaszn√°l√≥knak -->
        <% if (isAdmin || canCreateMainThreads) { %>
          <div class="thread-actions">
            <button class="delete-thread-btn" onclick="deleteThread(<%= thread.id %>)" title="T√©ma t√∂rl√©se">
              üóëÔ∏è
            </button>
          </div>
        <% } %>
      </div>
    <% }); %>
  <% } else { %>
    <div class="no-threads">
      M√©g nincsenek t√©m√°k ebben a kateg√≥ri√°ban.
    </div>
  <% } %>
</div>

<!-- T√©ma l√©trehoz√°s modal - csak jogosult felhaszn√°l√≥knak -->
<% if (canCreateMainThreads) { %>
  <div id="createModal" class="modal">
    <div class="modal-content">
      <span class="close" onclick="closeCreateModal()">&times;</span>
      <h2>√öj f≈ët√©ma l√©trehoz√°sa</h2>
      
      <!-- Markdown seg√©dlet -->
      <div class="markdown-help">
        <details>
          <summary>üìù Markdown form√°z√°s haszn√°lata</summary>
          <div class="markdown-guide">
  <p><strong>**vastag sz√∂veg**</strong> ‚Üí <strong>vastag sz√∂veg</strong></p>
  <p><em>*d≈ëlt sz√∂veg*</em> ‚Üí <em>d≈ëlt sz√∂veg</em></p>
  <p><code>`k√≥d`</code> ‚Üí <code>k√≥d</code></p>
  <p># Nagy c√≠msor</p>
  <p>## K√∂zepes c√≠msor</p>
  <p>- Lista elem</p>
  <p>> Id√©zet</p>
  <p>[Link sz√∂vege](https://example.com)</p>
  <hr style="margin: 10px 0; border: 1px solid #ddd;">
  <p><strong>Sz√≠nes sz√∂veg:</strong></p>
  <p>{red}piros sz√∂veg{/red} ‚Üí <span class="color-red">piros sz√∂veg</span></p>
  <p>{blue}k√©k sz√∂veg{/blue} ‚Üí <span class="color-blue">k√©k sz√∂veg</span></p>
  <p>{green}z√∂ld sz√∂veg{/green} ‚Üí <span class="color-green">z√∂ld sz√∂veg</span></p>
  <p>{yellow}s√°rga sz√∂veg{/yellow} ‚Üí <span class="color-yellow">s√°rga sz√∂veg</span></p>
  <p>{purple}lila sz√∂veg{/purple} ‚Üí <span class="color-purple">lila sz√∂veg</span></p>
  <p>{orange}narancs sz√∂veg{/orange} ‚Üí <span class="color-orange">narancs sz√∂veg</span></p>
  <p>{pink}r√≥zsasz√≠n sz√∂veg{/pink} ‚Üí <span class="color-pink">r√≥zsasz√≠n sz√∂veg</span></p>
  <p>{gray}sz√ºrke sz√∂veg{/gray} ‚Üí <span class="color-gray">sz√ºrke sz√∂veg</span></p>
</div>
        </details>
      </div>
      
      <form id="createMainThreadForm">
        <div class="form-group">
          <label for="title">T√©ma c√≠me:</label>
          <input type="text" id="title" name="title" required>
        </div>
        <div class="form-group">
          <label for="description">Le√≠r√°s (Markdown t√°mogatott):</label>
          <textarea id="description" name="description" placeholder="R√∂vid le√≠r√°s a t√©m√°r√≥l... 

Haszn√°lhatsz **vastag**, *d≈ëlt* sz√∂veget, √©s egy√©b form√°z√°st!" required></textarea>
        </div>
        <div class="form-group">
          <label for="categoryId">Kateg√≥ria:</label>
          <select id="categoryId" name="categoryId" required>
            <option value="">V√°lassz kateg√≥ri√°t</option>
            <% categories.forEach(category => { %>
              <option value="<%= category.id %>"><%= category.name %></option>
            <% }); %>
          </select>
        </div>
        <button type="submit" class="submit-btn">F≈ët√©ma l√©trehoz√°sa</button>
      </form>
    </div>
  </div>
<% } %>

<script>
// Modal kezel√©s
function openCreateModal() {
  document.getElementById('createModal').style.display = 'block';
}

function closeCreateModal() {
  document.getElementById('createModal').style.display = 'none';
}

// Kateg√≥ria sz≈±r√©s
function filterByCategory(categoryId) {
  if (categoryId === '') {
    window.location.href = '/forum';
  } else {
    window.location.href = `/forum/category/${categoryId}`;
  }
}

// F≈ët√©ma l√©trehoz√°s
<% if (canCreateMainThreads) { %>
document.getElementById('createMainThreadForm').addEventListener('submit', async function(e) {
  e.preventDefault();
  
  const formData = new FormData(this);
  const data = {
    title: formData.get('title'),
    description: formData.get('description'),
    categoryId: formData.get('categoryId')
  };

  try {
    const response = await fetch('/create-main-thread', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data)
    });

    const result = await response.json();

    if (result.success) {
      alert('F≈ët√©ma sikeresen l√©trehozva!');
      window.location.reload();
    } else {
      alert('Hiba: ' + result.error);
    }
  } catch (error) {
    console.error('Hiba:', error);
    alert('Hiba t√∂rt√©nt a t√©ma l√©trehoz√°sakor.');
  }
});
<% } %>

// T√©ma t√∂rl√©s
<% if (isAdmin || canCreateMainThreads) { %>
async function deleteThread(threadId) {
  if (confirm('Biztosan t√∂r√∂lni szeretn√©d ezt a t√©m√°t? Ez a m≈±velet nem visszavonhat√≥ √©s az √∂sszes alt√©m√°t is t√∂rli!')) {
    try {
      const response = await fetch(`/delete-thread/${threadId}`, {
        method: 'DELETE'
      });

      const result = await response.json();

      if (result.success) {
        alert('T√©ma sikeresen t√∂r√∂lve!');
        window.location.reload();
      } else {
        alert('Hiba: ' + result.error);
      }
    } catch (error) {
      console.error('Hiba:', error);
      alert('Hiba t√∂rt√©nt a t√©ma t√∂rl√©se sor√°n.');
    }
  }
}
<% } %>

// Modal bez√°r√°s kattint√°sra
window.onclick = function(event) {
  const modal = document.getElementById('createModal');
  if (event.target == modal) {
    closeCreateModal();
  }
}
</script>

<style>
.thread-actions {
  margin-left: 15px;
}

.delete-thread-btn {
  background: none;
  border: none;
  font-size: 18px;
  cursor: pointer;
  padding: 5px 10px;
  border-radius: 3px;
  transition: background-color 0.3s;
}

.delete-thread-btn:hover {
  background-color: #ff4444;
  color: white;
}

/* Markdown tartalom st√≠lusok */
.markdown-content {
  margin-top: 8px;
  color: #555;
  font-size: 14px;
  line-height: 1.4;
}

.markdown-content h1, .markdown-content h2, .markdown-content h3 {
  margin: 10px 0 5px 0;
  color: #333;
}

.markdown-content h1 { font-size: 18px; }
.markdown-content h2 { font-size: 16px; }
.markdown-content h3 { font-size: 14px; }

.markdown-content p {
  margin: 5px 0;
}

.markdown-content strong {
  font-weight: bold;
}

.markdown-content em {
  font-style: italic;
}

.markdown-content code {
  background-color: #f4f4f4;
  padding: 2px 4px;
  border-radius: 3px;
  font-family: monospace;
  font-size: 90%;
}

.markdown-content pre {
  background-color: #f4f4f4;
  padding: 10px;
  border-radius: 3px;
  overflow-x: auto;
  margin: 10px 0;
}

.markdown-content blockquote {
  border-left: 4px solid #ddd;
  margin: 10px 0;
  padding-left: 15px;
  color: #666;
}

.markdown-content ul, .markdown-content ol {
  margin: 5px 0 5px 20px;
}

.markdown-content a {
  color: #007bff;
  text-decoration: none;
}

.markdown-content a:hover {
  text-decoration: underline;
}

/* Markdown seg√©dlet st√≠lusok */
.markdown-help {
  margin-bottom: 15px;
}

.markdown-help summary {
  cursor: pointer;
  font-weight: bold;
  color: var(--primary-color);
  margin-bottom: 10px;
}

.markdown-guide {
  background-color: #f8f9fa;
  padding: 15px;
  border-radius: 5px;
  border-left: 4px solid var(--primary-color);
  margin-top: 10px;
}

.markdown-guide p {
  margin: 5px 0;
  font-family: monospace;
  font-size: 13px;
}

.thread-description {
  max-height: 150px;
  overflow: hidden;
  position: relative;
}

.thread-description:after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 20px;
  background: linear-gradient(to bottom, transparent, white);
}

.color-red { color: #dc3545; font-weight: 500; }
.color-blue { color: #007bff; font-weight: 500; }
.color-green { color: #28a745; font-weight: 500; }
.color-yellow { color: #ffc107; font-weight: 500; }
.color-purple { color: #6f42c1; font-weight: 500; }
.color-orange { color: #fd7e14; font-weight: 500; }
.color-pink { color: #e83e8c; font-weight: 500; }
.color-gray { color: #6c757d; font-weight: 500; }

.color-yellow { color: #ffc107; text-shadow: 1px 1px 1px rgba(0,0,0,0.3); }

</style>

<%- include("partials/footer.ejs") %>